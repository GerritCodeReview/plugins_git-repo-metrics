{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5d0031be_c453108b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-10T10:26:20Z",
      "side": 1,
      "message": "Not sure if I understand it correct but `UpdateGitMetricsTask` is called when repository is changed and it collects all metrics related to it. We could/should call it on Gerrit start (for configured repos) so that some initial values are there.\nAFAIU we would give in the possibility to capture metrics for more repositories for optimising a single repository metrics capture (or not as both collectors operate on IO so they could actually compete)...\nLet\u0027s put aside the benefits AFAIU it would be a problematic for busy repos as they can have on-going changes and that approach could/would make some repos starving...\n\nHow about dropping execution? IOW:\n1. there is no metrics collection happening for the repo hence schedule one; another coming will be dropped\n2. there is metrics collection happening for the repo therefore the first incoming will be scheduled and more incoming will be dropped\n\nIn this case it will be assured that metric collection will keep up with the changes without calculating them each time when they happen...",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "984af13652dcb5275eed6ac0327c7119f00ebdba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cef3fec_511de6f2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-09-14T11:29:20Z",
      "side": 1,
      "message": "\u003eNot sure if I understand it correct but UpdateGitMetricsTask is called when repository is changed and it collects all metrics related to it. We could/should call it on Gerrit start (for configured repos) so that some initial values are there.\n\nThe current use case of the plugin is to monitor repositories which might grow rapidly, i.e.: busy repositories. For the nature of the repositories, the metrics will be populated without the need to add extra code. I don\u0027t think it will be a big problem if we don\u0027t have metrics for a while after startup.\n\n\u003e In this case it will be assured that metric collection will keep up with the changes without calculating them each time when they happen\n\nBy design, the metrics are not supposed to be real-time. As long as we have metrics collected every X minutes (5/10min?) it should be enough.\nWe already have in place a mechanism to avoid being too aggressive. We have a grace period setting which allows avoiding collecting metrics too often.\n\nWe are trying to address cases like:\n* GC runs every 4 hours, we want to make sure the number of packfiles goes down after GC otherwise raise an alert\n* forecast the growth of a repository in the next X months\n\nDoes it make sense or did I misunderstood your comment?",
      "parentUuid": "5d0031be_c453108b",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "984af13652dcb5275eed6ac0327c7119f00ebdba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c451ebde_41d6ad48",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-20T17:15:10Z",
      "side": 1,
      "message": "Metrics are collected every grace period but AFAIU they are generated on each repo ref update operation see `GitRepoUpdateListener.onGitReferenceUpdated`...\n\nIOW it doesn\u0027t matter that we will ask for metric every `5/10min` if we are calculating them on every repo ref update which means that on busy repos it will be ongoing operation with repos competing on both levels: repo and individual metric collector (as they are submitted to the same executor)... AFAIU it will create the endless queue of metrics being calculated so that every `5/10min` result will be examined by callback metric and result could be sth way older than `5/10min` which would really depend on the time it takes to calculate vs business vs good luck as busier repos will be favoured over less busy (as they will schedule more tasks)...\n\nHaving said that I\u0027m happy to discuss it as I could have misinterpret sth ðŸ˜„",
      "parentUuid": "2cef3fec_511de6f2",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "984af13652dcb5275eed6ac0327c7119f00ebdba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85c0a81c_bca1e25c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-09-20T18:10:31Z",
      "side": 1,
      "message": "\u003e Metrics are collected every grace period but AFAIU they are generated on each repo ref update operation see GitRepoUpdateListener.onGitReferenceUpdated...\n\nActually, metrics are generated/calculated every grace period. The collection time is dictated, for example, by Prometheus, not the grace period. See this check [1] and its implementation [2].\n\nThis is to avoid, as you are saying, long queues of metrics calculation. I was also thinking of adding a feature to define the grace period per repo, so we could fine- tune the metrics calculation and avoid metrics calculations piling up.\n\nHope it makes more sense ðŸ˜Ž\n\n[1]: https://gerrit.googlesource.com/plugins/git-repo-metrics/+/56cdd59287f6a4e4eeefc6cad85beefc24f19752/src/main/java/com/googlesource/gerrit/plugins/gitrepometrics/GitRepoUpdateListener.java#43\n\n[2]: https://gerrit.googlesource.com/plugins/git-repo-metrics/+/56cdd59287f6a4e4eeefc6cad85beefc24f19752/src/main/java/com/googlesource/gerrit/plugins/gitrepometrics/GitRepoMetricsCache.java#155",
      "parentUuid": "c451ebde_41d6ad48",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "984af13652dcb5275eed6ac0327c7119f00ebdba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c3a33df_652a7789",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-20T19:58:50Z",
      "side": 1,
      "message": "Yeah I have missed the part that takes grace period into decision if repo metrics should be calculated. Thanks for pointing to that code!\n\nHaving said that I\u0027m still not fully convinced if it makes any improvement to schedule Git and FS metric collections as separate operations when the executor\u0027s thread count is `1` (default setting) as they will be performed one after another anyway...\nWhen threads number will be increased to `2` it could still easily block executor by running both Git and FS collection in the same time...\n\nOTOH I don\u0027t know what is the relation between the repo size / ref updates / metrics collection time and finally the grace period and it all may be a bit premature to optimise. IMHO it doesn\u0027t prevent the single repo from chocking the collection process unless threads pool will be big enough to compensate the repo size vs collection time and grace period...\n\nBTW: in the link #2, the following code:\n```\nreturn projects.stream().anyMatch(p -\u003e p.equals(projectName));\n```\n\ncould be improved with:\n1. turning *projects* into *Set* e.g. `this.projects \u003d new HashSet\u003c\u003e(config.getRepositoryNames());`\n2. reducing the check to `return projects.contains(projectName);`\n\nObviously to be considered as being addressed in the follow up ;)",
      "parentUuid": "85c0a81c_bca1e25c",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "984af13652dcb5275eed6ac0327c7119f00ebdba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c34dc92_7dd77261",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-09-20T20:15:36Z",
      "side": 1,
      "message": "\u003e Having said that I\u0027m still not fully convinced if it makes any improvement to schedule Git and FS metric collections as separate operations when the executor\u0027s thread count is 1 (default setting) as they will be performed one after another anyway...\n\nTotally agree with that. There is a change in the chain to make it configurable.\nI think pool size is one of the \"knobs\", along with the grace period (possibly per repo), to fine-tune the metric collection.\n\nI don\u0027t think there is a one-size-fits-all solution. Hence I wanted to expose the different configurations to adapt the collection to the numbers and size of repositories we are targeting.\n\n\u003e OTOH I don\u0027t know what is the relation between the repo size / ref updates / metrics collection time and finally the grace period and it all may be a bit premature to optimise.\n\nYep, that\u0027s what I thought as well. I didn\u0027t want to optimize prematurely. I think it will also depend on the plugin adoption and the feedback we will get from the users.\n\n\u003e BTW: in the link #2, the following code:\n\nAh good point! I will address it in a followup.",
      "parentUuid": "9c3a33df_652a7789",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "984af13652dcb5275eed6ac0327c7119f00ebdba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4631a228_f1b22b14",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-09-20T22:38:26Z",
      "side": 1,
      "message": "\u003e BTW: in the link #2, the following code:\n\nAddressed here [1]\n\n[1]: https://gerrit-review.googlesource.com/c/plugins/git-repo-metrics/+/346334",
      "parentUuid": "8c34dc92_7dd77261",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "984af13652dcb5275eed6ac0327c7119f00ebdba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19cf0b53_70e5f1f4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-21T06:53:27Z",
      "side": 1,
      "message": "Again I\u0027m not sure if threading out the repo metrics collection to separate threads would help to tweak it properly as IMHO it would be less deterministic but I will not argue on that ðŸ˜„",
      "parentUuid": "4631a228_f1b22b14",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "984af13652dcb5275eed6ac0327c7119f00ebdba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4dedf0cd_f539ea2f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-10T10:26:20Z",
      "side": 1,
      "message": "I\u0027m not native so take it with a pinch of salt but IMHO\n`better to avoid being too aggressive` sounds more natural to me...",
      "range": {
        "startLine": 25,
        "startChar": 9,
        "endLine": 25,
        "endChar": 27
      },
      "revId": "984af13652dcb5275eed6ac0327c7119f00ebdba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a9d5605_cb63331a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-09-14T11:57:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4dedf0cd_f539ea2f",
      "range": {
        "startLine": 25,
        "startChar": 9,
        "endLine": 25,
        "endChar": 27
      },
      "revId": "984af13652dcb5275eed6ac0327c7119f00ebdba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "221a9638_a355f241",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/gitrepometrics/collectors/FSMetricsCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-10T10:26:20Z",
      "side": 1,
      "message": "AFAIU what we need is a\n```\nrecord {\n  numberOfFiles \u003d 0L\n  numberOfDirectories \u003d 0L\n  numberOfEmptyDirectories \u003d 0L\n  numberOfKeepFiles \u003d 0L\n}\n```\nthat is being captured (for each filesystem object - either file or dir) and finally reduced to. So my question would be why not to introduce it instead of building it on the top of `HashMap`? IMHO it would state the intent and improve the readability of the code. WDYT? Another benefit would be that `getInitializedMetrics` wouldn\u0027t be needed anymore...",
      "range": {
        "startLine": 66,
        "startChar": 2,
        "endLine": 111,
        "endChar": 3
      },
      "revId": "984af13652dcb5275eed6ac0327c7119f00ebdba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71d19b5f_9da83bd8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/gitrepometrics/collectors/FSMetricsCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-09-14T11:29:20Z",
      "side": 1,
      "message": "yup, let me add it.",
      "parentUuid": "221a9638_a355f241",
      "range": {
        "startLine": 66,
        "startChar": 2,
        "endLine": 111,
        "endChar": 3
      },
      "revId": "984af13652dcb5275eed6ac0327c7119f00ebdba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3979792_88eb7598",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/gitrepometrics/collectors/FSMetricsCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-09-15T14:11:27Z",
      "side": 1,
      "message": "I have addresses it in here: https://gerrit-review.googlesource.com/c/plugins/git-repo-metrics/+/345794",
      "parentUuid": "71d19b5f_9da83bd8",
      "range": {
        "startLine": 66,
        "startChar": 2,
        "endLine": 111,
        "endChar": 3
      },
      "revId": "984af13652dcb5275eed6ac0327c7119f00ebdba",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}